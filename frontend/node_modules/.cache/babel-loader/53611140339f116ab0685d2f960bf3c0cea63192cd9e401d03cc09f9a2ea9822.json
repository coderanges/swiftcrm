{"ast":null,"code":"import axios from 'axios';\n\n// Create an instance of axios with default config\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // This enables cookies to be sent with requests\n});\n\n// Add request interceptor to set authorization header\napi.interceptors.request.use(config => {\n  // You could add auth token here if using JWT\n  return config;\n}, error => Promise.reject(error));\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  // Handle session expiration or unauthorized access\n  if (error.response && error.response.status === 401) {\n    // Redirect to login or refresh token\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth services\nexport const authService = {\n  login: (email, password) => api.post('/login', {\n    email,\n    password\n  }),\n  register: (name, email, password) => api.post('/register', {\n    name,\n    email,\n    password\n  }),\n  logout: () => api.post('/logout'),\n  getCurrentUser: () => api.get('/user')\n};\n\n// Contact services\nexport const contactService = {\n  getContacts: () => api.get('/contacts'),\n  getContact: id => api.get(`/contacts/${id}`),\n  createContact: contact => api.post('/contacts', contact),\n  updateContact: (id, contact) => api.put(`/contacts/${id}`, contact),\n  deleteContact: id => api.delete(`/contacts/${id}`)\n};\n\n// Lead services\nexport const leadService = {\n  getLeads: () => api.get('/leads'),\n  getLead: id => api.get(`/leads/${id}`),\n  createLead: lead => api.post('/leads', lead),\n  updateLead: (id, lead) => api.put(`/leads/${id}`, lead),\n  deleteLead: id => api.delete(`/leads/${id}`)\n};\n\n// Order services\nexport const orderService = {\n  getOrders: () => api.get('/orders'),\n  getOrder: id => api.get(`/orders/${id}`),\n  createOrder: order => api.post('/orders', order),\n  updateOrder: (id, order) => api.put(`/orders/${id}`, order),\n  deleteOrder: id => api.delete(`/orders/${id}`)\n};\n\n// Invoice services\nexport const invoiceService = {\n  getInvoices: () => api.get('/invoices'),\n  getInvoice: id => api.get(`/invoices/${id}`),\n  createInvoice: invoice => api.post('/invoices', invoice),\n  updateInvoice: (id, invoice) => api.put(`/invoices/${id}`, invoice),\n  deleteInvoice: id => api.delete(`/invoices/${id}`)\n};\n\n// Receipt services\nexport const receiptService = {\n  getReceipts: () => api.get('/receipts'),\n  getReceipt: id => api.get(`/receipts/${id}`),\n  createReceipt: receipt => api.post('/receipts', receipt),\n  updateReceipt: (id, receipt) => api.put(`/receipts/${id}`, receipt),\n  deleteReceipt: id => api.delete(`/receipts/${id}`)\n};\n\n// Accounting services\nexport const accountingService = {\n  getEntries: () => api.get('/accounting'),\n  getEntry: id => api.get(`/accounting/${id}`),\n  createEntry: entry => api.post('/accounting', entry),\n  updateEntry: (id, entry) => api.put(`/accounting/${id}`, entry),\n  deleteEntry: id => api.delete(`/accounting/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","authService","login","email","password","post","register","name","logout","getCurrentUser","get","contactService","getContacts","getContact","id","createContact","contact","updateContact","put","deleteContact","delete","leadService","getLeads","getLead","createLead","lead","updateLead","deleteLead","orderService","getOrders","getOrder","createOrder","order","updateOrder","deleteOrder","invoiceService","getInvoices","getInvoice","createInvoice","invoice","updateInvoice","deleteInvoice","receiptService","getReceipts","getReceipt","createReceipt","receipt","updateReceipt","deleteReceipt","accountingService","getEntries","getEntry","createEntry","entry","updateEntry","deleteEntry"],"sources":["/root/dev/swiftcrm/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Create an instance of axios with default config\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true  // This enables cookies to be sent with requests\n});\n\n// Add request interceptor to set authorization header\napi.interceptors.request.use(\n  (config) => {\n    // You could add auth token here if using JWT\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle session expiration or unauthorized access\n    if (error.response && error.response.status === 401) {\n      // Redirect to login or refresh token\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth services\nexport const authService = {\n  login: (email: string, password: string) => \n    api.post('/login', { email, password }),\n  \n  register: (name: string, email: string, password: string) => \n    api.post('/register', { name, email, password }),\n  \n  logout: () => \n    api.post('/logout'),\n  \n  getCurrentUser: () => \n    api.get('/user')\n};\n\n// Contact services\nexport const contactService = {\n  getContacts: () => \n    api.get('/contacts'),\n  \n  getContact: (id: number) => \n    api.get(`/contacts/${id}`),\n  \n  createContact: (contact: any) => \n    api.post('/contacts', contact),\n  \n  updateContact: (id: number, contact: any) => \n    api.put(`/contacts/${id}`, contact),\n  \n  deleteContact: (id: number) => \n    api.delete(`/contacts/${id}`)\n};\n\n// Lead services\nexport const leadService = {\n  getLeads: () => \n    api.get('/leads'),\n  \n  getLead: (id: number) => \n    api.get(`/leads/${id}`),\n  \n  createLead: (lead: any) => \n    api.post('/leads', lead),\n  \n  updateLead: (id: number, lead: any) => \n    api.put(`/leads/${id}`, lead),\n  \n  deleteLead: (id: number) => \n    api.delete(`/leads/${id}`)\n};\n\n// Order services\nexport const orderService = {\n  getOrders: () => \n    api.get('/orders'),\n  \n  getOrder: (id: number) => \n    api.get(`/orders/${id}`),\n  \n  createOrder: (order: any) => \n    api.post('/orders', order),\n  \n  updateOrder: (id: number, order: any) => \n    api.put(`/orders/${id}`, order),\n  \n  deleteOrder: (id: number) => \n    api.delete(`/orders/${id}`)\n};\n\n// Invoice services\nexport const invoiceService = {\n  getInvoices: () => \n    api.get('/invoices'),\n  \n  getInvoice: (id: number) => \n    api.get(`/invoices/${id}`),\n  \n  createInvoice: (invoice: any) => \n    api.post('/invoices', invoice),\n  \n  updateInvoice: (id: number, invoice: any) => \n    api.put(`/invoices/${id}`, invoice),\n  \n  deleteInvoice: (id: number) => \n    api.delete(`/invoices/${id}`)\n};\n\n// Receipt services\nexport const receiptService = {\n  getReceipts: () => \n    api.get('/receipts'),\n  \n  getReceipt: (id: number) => \n    api.get(`/receipts/${id}`),\n  \n  createReceipt: (receipt: any) => \n    api.post('/receipts', receipt),\n  \n  updateReceipt: (id: number, receipt: any) => \n    api.put(`/receipts/${id}`, receipt),\n  \n  deleteReceipt: (id: number) => \n    api.delete(`/receipts/${id}`)\n};\n\n// Accounting services\nexport const accountingService = {\n  getEntries: () => \n    api.get('/accounting'),\n  \n  getEntry: (id: number) => \n    api.get(`/accounting/${id}`),\n  \n  createEntry: (entry: any) => \n    api.post('/accounting', entry),\n  \n  updateEntry: (id: number, entry: any) => \n    api.put(`/accounting/${id}`, entry),\n  \n  deleteEntry: (id: number) => \n    api.delete(`/accounting/${id}`)\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}