{"ast":null,"code":"import React,{useState}from'react';import{Container,Form,Button,Card,Alert}from'react-bootstrap';import{Link}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[error,setError]=useState('');const{authState,register}=useAuth();const handleSubmit=async e=>{e.preventDefault();// Clear previous errors\nsetError('');// Validate passwords match\nif(password!==confirmPassword){setError('Passwords do not match');return;}// Proceed with registration\nawait register(name,email,password);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"div\",{className:\"auth-form\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center mb-4\",children:\"Register\"}),error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),authState.error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:authState.error}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Full Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Enter your full name\",value:name,onChange:e=>setName(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter your email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter your password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm your password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(Button,{className:\"w-100 mt-3\",variant:\"primary\",type:\"submit\",disabled:authState.loading,children:authState.loading?'Loading...':'Register'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-100 text-center mt-3\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Login\"})]})]})})})});};export default Register;","map":{"version":3,"names":["React","useState","Container","Form","Button","Card","Alert","Link","useAuth","jsx","_jsx","jsxs","_jsxs","Register","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","authState","register","handleSubmit","e","preventDefault","children","className","Body","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","disabled","loading","to"],"sources":["/root/dev/swiftcrm/frontend/src/pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Card, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst Register: React.FC = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const { authState, register } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Clear previous errors\n    setError('');\n    \n    // Validate passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    \n    // Proceed with registration\n    await register(name, email, password);\n  };\n\n  return (\n    <Container>\n      <div className=\"auth-form\">\n        <Card>\n          <Card.Body>\n            <h2 className=\"text-center mb-4\">Register</h2>\n            \n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            {authState.error && <Alert variant=\"danger\">{authState.error}</Alert>}\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group className=\"mb-3\" controlId=\"name\">\n                <Form.Label>Full Name</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"Enter your full name\" \n                  value={name} \n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control \n                  type=\"email\" \n                  placeholder=\"Enter your email\" \n                  value={email} \n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Enter your password\" \n                  value={password} \n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control \n                  type=\"password\" \n                  placeholder=\"Confirm your password\" \n                  value={confirmPassword} \n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Button \n                className=\"w-100 mt-3\" \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={authState.loading}\n              >\n                {authState.loading ? 'Loading...' : 'Register'}\n              </Button>\n            </Form>\n\n            <div className=\"w-100 text-center mt-3\">\n              Already have an account? <Link to=\"/login\">Login</Link>\n            </div>\n          </Card.Body>\n        </Card>\n      </div>\n    </Container>\n  );\n};\n\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}