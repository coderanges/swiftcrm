{"ast":null,"code":"import axios from'axios';// Create an instance of axios with default config\nconst api=axios.create({baseURL:'/api',headers:{'Content-Type':'application/json'},withCredentials:true// This enables cookies to be sent with requests\n});// Add request interceptor to set authorization header\napi.interceptors.request.use(config=>{// You could add auth token here if using JWT\nreturn config;},error=>Promise.reject(error));// Add response interceptor to handle errors\napi.interceptors.response.use(response=>response,error=>{// Handle session expiration or unauthorized access\nif(error.response&&error.response.status===401){// Redirect to login or refresh token\nwindow.location.href='/login';}return Promise.reject(error);});// Auth services\nexport const authService={login:(email,password)=>api.post('/login',{email,password}),register:(name,email,password)=>api.post('/register',{name,email,password}),logout:()=>api.post('/logout'),getCurrentUser:()=>api.get('/user')};// Contact services\nexport const contactService={getContacts:()=>api.get('/contacts'),getContact:id=>api.get(`/contacts/${id}`),createContact:contact=>api.post('/contacts',contact),updateContact:(id,contact)=>api.put(`/contacts/${id}`,contact),deleteContact:id=>api.delete(`/contacts/${id}`)};// Lead services\nexport const leadService={getLeads:()=>api.get('/leads'),getLead:id=>api.get(`/leads/${id}`),createLead:lead=>api.post('/leads',lead),updateLead:(id,lead)=>api.put(`/leads/${id}`,lead),deleteLead:id=>api.delete(`/leads/${id}`)};// Order services\nexport const orderService={getOrders:()=>api.get('/orders'),getOrder:id=>api.get(`/orders/${id}`),createOrder:order=>api.post('/orders',order),updateOrder:(id,order)=>api.put(`/orders/${id}`,order),deleteOrder:id=>api.delete(`/orders/${id}`)};// Invoice services\nexport const invoiceService={getInvoices:()=>api.get('/invoices'),getInvoice:id=>api.get(`/invoices/${id}`),createInvoice:invoice=>api.post('/invoices',invoice),updateInvoice:(id,invoice)=>api.put(`/invoices/${id}`,invoice),deleteInvoice:id=>api.delete(`/invoices/${id}`)};// Receipt services\nexport const receiptService={getReceipts:()=>api.get('/receipts'),getReceipt:id=>api.get(`/receipts/${id}`),createReceipt:receipt=>api.post('/receipts',receipt),updateReceipt:(id,receipt)=>api.put(`/receipts/${id}`,receipt),deleteReceipt:id=>api.delete(`/receipts/${id}`)};// Accounting services\nexport const accountingService={getEntries:()=>api.get('/accounting'),getEntry:id=>api.get(`/accounting/${id}`),createEntry:entry=>api.post('/accounting',entry),updateEntry:(id,entry)=>api.put(`/accounting/${id}`,entry),deleteEntry:id=>api.delete(`/accounting/${id}`)};export default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","status","window","location","href","authService","login","email","password","post","register","name","logout","getCurrentUser","get","contactService","getContacts","getContact","id","createContact","contact","updateContact","put","deleteContact","delete","leadService","getLeads","getLead","createLead","lead","updateLead","deleteLead","orderService","getOrders","getOrder","createOrder","order","updateOrder","deleteOrder","invoiceService","getInvoices","getInvoice","createInvoice","invoice","updateInvoice","deleteInvoice","receiptService","getReceipts","getReceipt","createReceipt","receipt","updateReceipt","deleteReceipt","accountingService","getEntries","getEntry","createEntry","entry","updateEntry","deleteEntry"],"sources":["/root/dev/swiftcrm/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\n// Create an instance of axios with default config\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true  // This enables cookies to be sent with requests\n});\n\n// Add request interceptor to set authorization header\napi.interceptors.request.use(\n  (config) => {\n    // You could add auth token here if using JWT\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Add response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Handle session expiration or unauthorized access\n    if (error.response && error.response.status === 401) {\n      // Redirect to login or refresh token\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth services\nexport const authService = {\n  login: (email: string, password: string) => \n    api.post('/login', { email, password }),\n  \n  register: (name: string, email: string, password: string) => \n    api.post('/register', { name, email, password }),\n  \n  logout: () => \n    api.post('/logout'),\n  \n  getCurrentUser: () => \n    api.get('/user')\n};\n\n// Contact services\nexport const contactService = {\n  getContacts: () => \n    api.get('/contacts'),\n  \n  getContact: (id: number) => \n    api.get(`/contacts/${id}`),\n  \n  createContact: (contact: any) => \n    api.post('/contacts', contact),\n  \n  updateContact: (id: number, contact: any) => \n    api.put(`/contacts/${id}`, contact),\n  \n  deleteContact: (id: number) => \n    api.delete(`/contacts/${id}`)\n};\n\n// Lead services\nexport const leadService = {\n  getLeads: () => \n    api.get('/leads'),\n  \n  getLead: (id: number) => \n    api.get(`/leads/${id}`),\n  \n  createLead: (lead: any) => \n    api.post('/leads', lead),\n  \n  updateLead: (id: number, lead: any) => \n    api.put(`/leads/${id}`, lead),\n  \n  deleteLead: (id: number) => \n    api.delete(`/leads/${id}`)\n};\n\n// Order services\nexport const orderService = {\n  getOrders: () => \n    api.get('/orders'),\n  \n  getOrder: (id: number) => \n    api.get(`/orders/${id}`),\n  \n  createOrder: (order: any) => \n    api.post('/orders', order),\n  \n  updateOrder: (id: number, order: any) => \n    api.put(`/orders/${id}`, order),\n  \n  deleteOrder: (id: number) => \n    api.delete(`/orders/${id}`)\n};\n\n// Invoice services\nexport const invoiceService = {\n  getInvoices: () => \n    api.get('/invoices'),\n  \n  getInvoice: (id: number) => \n    api.get(`/invoices/${id}`),\n  \n  createInvoice: (invoice: any) => \n    api.post('/invoices', invoice),\n  \n  updateInvoice: (id: number, invoice: any) => \n    api.put(`/invoices/${id}`, invoice),\n  \n  deleteInvoice: (id: number) => \n    api.delete(`/invoices/${id}`)\n};\n\n// Receipt services\nexport const receiptService = {\n  getReceipts: () => \n    api.get('/receipts'),\n  \n  getReceipt: (id: number) => \n    api.get(`/receipts/${id}`),\n  \n  createReceipt: (receipt: any) => \n    api.post('/receipts', receipt),\n  \n  updateReceipt: (id: number, receipt: any) => \n    api.put(`/receipts/${id}`, receipt),\n  \n  deleteReceipt: (id: number) => \n    api.delete(`/receipts/${id}`)\n};\n\n// Accounting services\nexport const accountingService = {\n  getEntries: () => \n    api.get('/accounting'),\n  \n  getEntry: (id: number) => \n    api.get(`/accounting/${id}`),\n  \n  createEntry: (entry: any) => \n    api.post('/accounting', entry),\n  \n  updateEntry: (id: number, entry: any) => \n    api.put(`/accounting/${id}`, entry),\n  \n  deleteEntry: (id: number) => \n    api.delete(`/accounting/${id}`)\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}